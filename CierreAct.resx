<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label8.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wCnvaFUfmg50wAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        axLJ/znkeC/i0SzVAAAAAElFTkSuQmCC
</value>
  </data>
</root>